{"remainingRequest":"/Users/panda/code/vue3+ts/pandong/node_modules/babel-loader/lib/index.js!/Users/panda/code/vue3+ts/pandong/node_modules/eslint-loader/index.js??ref--13-0!/Users/panda/code/vue3+ts/pandong/src/utils/request.js","dependencies":[{"path":"/Users/panda/code/vue3+ts/pandong/src/utils/request.js","mtime":1616753685905},{"path":"/Users/panda/code/vue3+ts/pandong/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/panda/code/vue3+ts/pandong/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/panda/code/vue3+ts/pandong/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmF4aW9zLmRlZmF1bHRzLmJhc2VVUkwgPSAnL2FwaSc7IC8vIOWIm+W7uuWvueixoSAgIAoKdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAnaHR0cHM6Ly93d3cuZmFzdG1vY2suc2l0ZS9tb2NrL2FlOGU5MDMxOTQ3YTMwMmZlZDVmOTI0MjU5OTVhYTE5L2pkJywKICB0aW1lb3V0OiAxMDAwMAp9KTsKZXhwb3J0IHZhciBnZXQgPSBmdW5jdGlvbiBnZXQodXJsKSB7CiAgdmFyIHBhcmFtcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGluc3RhbmNlLmdldCh1cmwsIHsKICAgICAgcGFyYW1zOiBwYXJhbXMKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJlc29sdmUocmVzcG9uc2UuZGF0YSk7CiAgICB9LCBmdW5jdGlvbiAoZXJyKSB7CiAgICAgIHJlamVjdChlcnIpOwogICAgfSk7CiAgfSk7Cn07CmV4cG9ydCB2YXIgcG9zdCA9IGZ1bmN0aW9uIHBvc3QodXJsKSB7CiAgdmFyIGRhdGEgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9OwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBpbnN0YW5jZS5wb3N0KHVybCwgZGF0YSwgewogICAgICBoZWFkZXJzOiB7CiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICB9CiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXNvbHZlKHJlc3BvbnNlLmRhdGEpOwogICAgfSwgZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyKTsKICAgIH0pOwogIH0pOwp9OwpleHBvcnQgdmFyIHBhdGNoID0gZnVuY3Rpb24gcGF0Y2godXJsKSB7CiAgdmFyIGRhdGEgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9OwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBpbnN0YW5jZS5wb3N0KHVybCwgZGF0YSwgewogICAgICBoZWFkZXJzOiB7CiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICB9CiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXNvbHZlKHJlc3BvbnNlLmRhdGEpOwogICAgfSwgZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyKTsKICAgIH0pOwogIH0pOwp9Ow=="},{"version":3,"sources":["/Users/panda/code/vue3+ts/pandong/src/utils/request.js"],"names":["axios","defaults","baseURL","instance","create","timeout","get","url","params","Promise","resolve","reject","then","response","data","err","post","headers","patch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,MAAzB,C,CAEA;;AACA,IAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5BF,EAAAA,OAAO,EAAE,oEADmB;AAE5BG,EAAAA,OAAO,EAAE;AAFmB,CAAb,CAAjB;AAKA,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD,EAAsB;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;AACvC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCR,IAAAA,QAAQ,CAACG,GAAT,CAAaC,GAAb,EAAkB;AAAEC,MAAAA,MAAM,EAANA;AAAF,KAAlB,EAA8BI,IAA9B,CAAmC,UAACC,QAAD,EAAc;AAC/CH,MAAAA,OAAO,CAACG,QAAQ,CAACC,IAAV,CAAP;AACD,KAFD,EAEG,UAAAC,GAAG,EAAI;AACRJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACD,KAJD;AAKD,GANM,CAAP;AAOD,CARM;AAUP,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACT,GAAD,EAAoB;AAAA,MAAdO,IAAc,uEAAP,EAAO;AACtC,SAAO,IAAIL,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCR,IAAAA,QAAQ,CAACa,IAAT,CAAcT,GAAd,EAAmBO,IAAnB,EAAyB;AACvBG,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADc,KAAzB,EAIGL,IAJH,CAIQ,UAACC,QAAD,EAAc;AACpBH,MAAAA,OAAO,CAACG,QAAQ,CAACC,IAAV,CAAP;AACD,KAND,EAMG,UAAAC,GAAG,EAAI;AACRJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACD,KARD;AASD,GAVM,CAAP;AAWD,CAZM;AAaP,OAAO,IAAMG,KAAK,GAAG,SAARA,KAAQ,CAACX,GAAD,EAAoB;AAAA,MAAdO,IAAc,uEAAP,EAAO;AACvC,SAAO,IAAIL,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCR,IAAAA,QAAQ,CAACa,IAAT,CAAcT,GAAd,EAAmBO,IAAnB,EAAyB;AACvBG,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADc,KAAzB,EAIGL,IAJH,CAIQ,UAACC,QAAD,EAAc;AACpBH,MAAAA,OAAO,CAACG,QAAQ,CAACC,IAAV,CAAP;AACD,KAND,EAMG,UAAAC,GAAG,EAAI;AACRJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACD,KARD;AASD,GAVM,CAAP;AAWD,CAZM","sourcesContent":["import axios from 'axios';\n\n\naxios.defaults.baseURL = '/api'\n\n// 创建对象   \nconst instance = axios.create({\n  baseURL: 'https://www.fastmock.site/mock/ae8e9031947a302fed5f92425995aa19/jd',\n  timeout: 10000\n})\n\nexport const get = (url, params = {}) => {\n  return new Promise((resolve, reject) => {\n    instance.get(url, { params }).then((response) => {\n      resolve(response.data)\n    }, err => {\n      reject(err)\n    })\n  })\n}\n\nexport const post = (url, data = {}) => {\n  return new Promise((resolve, reject) => {\n    instance.post(url, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then((response) => {\n      resolve(response.data)\n    }, err => {\n      reject(err)\n    })\n  })\n}\nexport const patch = (url, data = {}) => {\n  return new Promise((resolve, reject) => {\n    instance.post(url, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then((response) => {\n      resolve(response.data)\n    }, err => {\n      reject(err)\n    })\n  })\n}\n\n\n"]}]}